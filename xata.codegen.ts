// Generated by Xata Codegen 0.21.0. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "myMoods",
    columns: [
      {
        name: "Date",
        type: "datetime",
        notNull: true,
        defaultValue: "2023-01-01T00:00:00Z",
      },
      { name: "Mood", type: "int", notNull: true, defaultValue: "0" },
      { name: "Motivation", type: "int", notNull: true, defaultValue: "0" },
      { name: "Notes", type: "text" },
      { name: "Feeling", type: "string" },
      {
        name: "SocialButterfly",
        type: "int",
        notNull: true,
        defaultValue: "5",
      },
      {
        name: "PeoplePissinYouOff",
        type: "int",
        notNull: true,
        defaultValue: "5",
      },
      {
        name: "YouPissinPeopleOff",
        type: "int",
        notNull: true,
        defaultValue: "5",
      },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type MyMoods = InferredTypes["myMoods"];
export type MyMoodsRecord = MyMoods & XataRecord;

export type DatabaseSchema = {
  myMoods: MyMoodsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Anthony-Dombrowski-s-workspace-vnjf6m.us-west-2.xata.sh/db/how-ya-doin-buddy",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
